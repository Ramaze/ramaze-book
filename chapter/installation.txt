= Ramaze Installation

As mentioned above, Ramaze is a web application framework. It features a readable open source codebase licensed under the Ruby license (optionally GPL version 2).

The strengths of Ramaze, as described by its users, are a free style of development, affording all the benefits of the underlying Ruby programming language. It gets out of your way as you do things, helping you along as you require it.

== Installation Prerequisites

* [ruby]
* [rubygems]
* [rack]
* [ramaze]

== Installing a specific version

Installing Ramaze should be very simple on most systems. Following are several installation methods.

=== On Windows

(forthcoming)

=== On OSX

Installing Ramaze is fairly straight forward. Mac OS X ships with Ruby 1.8 by default and this should be enough to run Ramaze and most other Ruby applications.
It's recommended that you use http://rvm.beginrescueend.com[RVM] to install a more up to date version of Ruby and all required Gems. 

For example, I'm running Mac OS X 10.6 which ships with Ruby 1.8. In order to keep things a bit more organized I installed Ruby 1.9.2 using RVM and use that for developing all my Ruby projects. 
Explaining how RVM works is out of the scope of this guide so I recommened you visit it's website and read the guides.

RVM or plain Ruby, in the end it comes down to two steps. First make sure Rubygems is installed. Because we're on a Mac we don't have access to a package manager such as apt, this means
we'll have to install Rubygems by downloading the package ourselves. Assuming you have downloaded the most recent version of Rubygems and opened the directory in the Terminal we can execute
the following command to install Rubygems:

[source,ruby]
--------------------------------------------------------------------------------
$ ruby setup.rb
--------------------------------------------------------------------------------

In some cases you may need super-user rights, in that case the command should be the following:

[source,ruby]
--------------------------------------------------------------------------------
$ sudo ruby setup.rb
--------------------------------------------------------------------------------

Now that Rubygems is installed we can simply install Ramaze using the following command:

[source,ruby]
--------------------------------------------------------------------------------
$ gem install ramaze
--------------------------------------------------------------------------------

And that's it. Rubygems is installed and so is Ramaze. From this point you can use the ramaze command.

=== On Linux

Installing Ramaze on a Linux based system is almost the same as installing it on OS X. The difference however is that many package managers already contain a version of Rubygems so usually
you can install it without having to download the package manually. On Ubuntu we can simply issue the following command to install Rubygems:

[source,ruby]
--------------------------------------------------------------------------------
$ apt-get install rubygems
--------------------------------------------------------------------------------

=== ArchLinux

[source,ruby]
--------------------------------------------------------------------------------
$ pacman -S rubygems
--------------------------------------------------------------------------------

=== Debian or Ubuntu

[source,ruby]
--------------------------------------------------------------------------------
$ apt-get install rubygems
--------------------------------------------------------------------------------

=== Gentoo

[source,ruby]
--------------------------------------------------------------------------------
$ emerge rubygems
--------------------------------------------------------------------------------

Now that you have rubygems installed, I strongly recommend that you take the following steps to permit you to install gems in your own personal space in the filesystem (your home directory), as opposed to using root privileges to install gems. This will simplify further diving into the Ruby ecosystem.

Simply add following lines to your ~/.bashrc or ~/.zshrc:

[source,ruby]
--------------------------------------------------------------------------------
export RUBYOPT=-rubygems
export GEM_HOME="$HOME/.gems"
export GEM_PATH="$GEM_HOME"
export PATH="$HOME/.gems/bin:$PATH"
--------------------------------------------------------------------------------

Once you have done that you can simply run

[source,ruby]
--------------------------------------------------------------------------------
gem install ramaze
--------------------------------------------------------------------------------

and Ramaze will be installed.

Manual Installation of Rubygems

=== Download and install from http://rubygems.org

Visit [rubyforge rubygems] and download the latest version as a tgz file. 

== Installing the development version of Ramaze

Ramaze is developed in a git repository, so if you want to see and use the latest source code, you can simply get your own copy. Since all our commits are checked by the spec (test) suite before they get into the official repository, the repository version of Ramaze is generally safe for production use, and even recommended over the public releases since recent security and code flaws have been fixed.

Installing the gem is only recommended if you want to have a version of Ramaze that "just works", or if you only have the ability to use Ramaze through the gem (a possibility on some system setups).

=== Getting the development version without using git

You can download a tarball directly from github, the location of our Ramaze repository is at [github ramaze] and the tarball is located at [github ramaze tarball].

[github ramaze]: http://github.com/manveru/ramaze
[github ramaze tarball]: http://github.com/manveru/ramaze/tarball/master

=== Getting git

Git is available on most Linux distributions and OSX. Visit [git] for download links and installation instructions. At the time of this writing, git is not officially supported on Windows, but unofficial binaries are available for download from the git website.


=== Getting the development version using git

Cloning the repository (getting your own copy) is really simple once you have installed git.

[source,ruby]
--------------------------------------------------------------------------------
git clone git://github.com/manveru/ramaze
--------------------------------------------------------------------------------

Setting up your environment after installation

Now that you have the latest version of Ramaze, you have to tell Ruby how to find it. One of the simplest ways is to add a file named `ramaze.rb` to your `site_ruby` directory.

[source,ruby]
--------------------------------------------------------------------------------
echo 'export RUBYLIB="/path/to/ramaze/lib/:$RUBYLIB"' >> ~/.bashrc
--------------------------------------------------------------------------------

This way, everytime you say `require 'ramaze'` in your code, it will first require the ramaze.rb in the `site_ruby` directory, which in turn requires the ramaze.rb from your development version.
